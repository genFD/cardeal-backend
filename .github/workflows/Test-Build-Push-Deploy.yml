name: CI/CD
# Trigger jobs only when 
# - PR is created 
# - Merge into main
# - Merge into production
on:
  push:
    branches:
      - main
      - production
  pull_request:

jobs:
  
  test-lint:
    name: Run unit ||| e2e tests and lint code
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Run Tests
        run: echo "RUNNING TEST"

      - name: Lint Check
        run: echo "RUNNING LINT /"

  build-docker-image:
    name: Build and push docker image to ECR
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: [test-lint]
    # returns true if github.ref is 'main' or 'production'.
    if: contains(fromJSON('["refs/heads/main", "refs/heads/production"]'), github.ref)
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      # - name: Log into the Amazon ECR 
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag and push docker image to Amazon ECR Public
        env:
          REPOSITORY: ${{ secrets.ECR_REPO }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
             echo "Creating/"
#            make build-test 
#            make push REMOTE_TAG=$REPOSITORY
  
  deploy-development:
    name: Deploy to development
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      contents: read
    needs: [test-lint, build-docker-image]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7
          terraform_wrapper: false

      - name: Terraform init
        id: init-ci
        run: make terraform-init-ci

      - name: Terraform validate
        id: validate
        run: make terraform-validate-ci ENV=dev

      - name: Terraform plan
        id: plan
        run: make terraform-plan ENV=dev

      - name: Deploy to development
        id: apply
        # run: make terraform-apply ENV=dev
      # - name: Deploy to development
        run: echo 'Deploy to development'

  deploy-production:
    name: Deploy to production
    runs-on: ubuntu-22.04
    needs: [test-lint, build-docker-image]
    if: github.ref == 'refs/heads/production'
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Check out the repository
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7
          terraform_wrapper: false

      - name: Terraform validate
        id: validate
        run: make terraform-validate-CI

      - name: Terraform plan
        id: plan
        run: make terraform-action TF_ACTION=plan ENV=prod

      - name: Deploy to development
        run: make terraform-action TF_ACTION=apply ENV=prod
  
  
  
  