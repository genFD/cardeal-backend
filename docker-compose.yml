services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      #  will build image from development stage 
      target: dev
    ports:
      - 8000:8000
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      #  bind mount src code and src code inside container("hot reload") 
    volumes:
      -  .:/usr/src/app/
      -  /usr/src/app/node_modules 
      #ensures that the NestJS container manages the node_modules folder (rather than being synced with the host machine)
    command: npm run start:migrate
   
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    env_file:
      - .env
    volumes:
      - nest-postgres:/var/lib/postgresql/data
  # test-postgres:
  #   image: postgres
  #   restart: always
  #   environment:
  #    POSTGRES_DB: ${POSTGRES_DB}
  #    POSTGRES_USER: ${POSTGRES_USER}
  #    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   env_file:
  #     - .env.test
  #   ports:
  #     - '5433:5433'  
volumes:
  nest-postgres:
  
